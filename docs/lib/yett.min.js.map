{"version":3,"file":"yett.min.js","sources":["../../src/variables.js","../../src/checks.js","../../src/observer.js","../../src/monkey.js","../../src/unblock.js"],"sourcesContent":["export const TYPE_ATTRIBUTE = 'javascript/blocked'\n\nexport const patternsObj = {\n    blacklist: null,\n    whitelist: null\n}\n\nexport const patterns = {\n    blacklist:  window.YETT_BLACKLIST,\n    whitelist:  window.YETT_WHITELIST,\n    tags: []\n}\n\nif (patterns.blacklist){\n  patterns.blacklist.forEach(element => {\n    if (typeof element === 'string'){\n        const pos = element.indexOf('/')\n        if (pos > 1) {\n            const tag = element.substring(0,pos)\n            if (tag.length > 1)\n                patterns.tags.push(tag)\n        }\n    }\n  })\n}\n\nif (! (patterns.blacklist instanceof Array) && (patterns.blacklist instanceof Object)){\n    patternsObj.blacklist = patterns.blacklist;\n    patterns.blacklist = Object.keys(patternsObj.blacklist);\n}\nif (! (patterns.whitelist instanceof Array) && (patterns.whitelist instanceof Object)){\n    patternsObj.whitelist = patterns.whitelist;\n    patterns.whitelist = Object.keys(patternsObj.whitelist);\n    \n} \n// Backup list containing the original blacklisted script elements\nexport const backupScripts = {\n    blacklisted: []\n}\n\nexport const blockNodeNoBackup = (node,blockingType) => {\n\n    if(typeof blockingType === \"string\" && blockingType != \"remove\"){\n        let arr = blockingType.split(\":\")\n        let type = 'src'\n        let value = null\n        if(arr.length < 1){\n            value = arr[0]\n        }else{\n            type = arr[0]\n            value = arr[1]\n        }\n        if (type == 'javascript'){\n            eval(value)\n        }else{\n            node[type] = value\n        }\n        return true\n    }\n    return false\n}\n\nexport const blockNode = (node,blockingType) => {\n    const parent = node.parentElement\n    if (!parent)\n        return false\n    backupScripts.blacklisted.push([node.cloneNode(),parent])\n    if (blockingType === true || blockingType === 'remove'){\n        parent.removeChild(node)\n        return true\n    }\n    return blockNodeNoBackup(node,blockingType)\n}","import { patterns, TYPE_ATTRIBUTE } from './variables'\n\nexport const isUrl = pattern => {\n    return pattern.startsWith('http') || pattern.slice(-1) != '/'\n} \n\n/*\n* pattern: tagName:attribute/expresion/blockingType\n* node: an html node or a string with an url or a string to evaluate pattern: tagName:attribute/expresion/ \n*       (las expression must end on /) \n*/\nexport const testPattern = (pattern,node) => {\n    if(typeof node === \"string\"){\n        if ( !node.startsWith('http') && node.slice(-1) == '/'){\n            const pos = node.indexOf('/')\n            const posEnd = node.indexOf('/',pos+1)\n            const value = node.substring(pos+1,posEnd-1)\n            let type = 'src'\n            let tagName = 'SCRIPT'\n            if(pos != 0){\n                let arr_type = node.substring(0,pos).split(\":\")\n                if (arr_type.length > 1){\n                    type = arr_type[1]\n                    tagName = arr_type[0].toUpperCase()\n                }else{\n                    type = arr_type[0]\n                }\n            }\n            node = {'tagName': tagName}\n            node[type]=value           \n        }else{\n            node = {'src': node, 'tagName': 'SCRIPT'}\n        }\n    }\n    if (! (typeof pattern === \"string\")){\n        if (node.tagName === \"SCRIPT\" && node.src)\n            return pattern.test(node.src)\n        else\n            return false\n    }\n    const pos = pattern.indexOf('/')\n    const posEnd = pattern.indexOf('/',pos+1)\n    let blockingType = pattern.substring(posEnd+1)    \n    let type = 'src'\n    let tagName = null\n    if(pos != 0){\n        let arr_type = pattern.substring(0,pos).split(\":\")\n        if (arr_type.length > 1){\n            type = arr_type[1]\n            tagName = arr_type[0].toUpperCase()\n        }else{\n            type = arr_type[0]\n        }\n    }\n    if (tagName && tagName !== node.tagName) return false;\n    if (blockingType.length < 1 )\n        blockingType = true\n    pattern = pattern.substring(pos,posEnd+1)\n    if (!node[type]){\n        if (pattern == '//') return blockingType\n        else return false\n    }\n    return eval(pattern).test(node[type]) ? blockingType : false\n}\n/*\n*   blockingType\n*   Returns false if not blocked, true if default blocking type (delete node),or blocking type in rule\n*   whith '//' pattern can block local scripts:\n*   - false\n*   - true or remove\n*   - attribute:value\n*   - javascript:function whith node as parameter\n*/\nexport const isOnBlacklist = (node) => {\n    let blockingType = false\n    \n    if (node.type && node.type === TYPE_ATTRIBUTE) return true;\n\n    if (patterns.blacklist){\n        blockingType =  patterns.blacklist.some(pattern => testPattern(pattern,node))\n    }\n\n    if (patterns.whitelist){\n        blockingType =  patterns.whitelist.every(pattern => !testPattern(pattern,node))\n    }    \n\n    return blockingType\n\n}\n\nexport const willBeUnblocked = function(script) {\n    // const src = script.getAttribute('src')\n    return (\n        patterns.blacklist && patterns.blacklist.every(entry => !testPattern(entry,script)) ||\n        patterns.whitelist && patterns.whitelist.some(entry => testPattern(entry,script))\n    )\n}","import { backupScripts, blockNode, TYPE_ATTRIBUTE, blockNodeNoBackup } from './variables'\nimport { isOnBlacklist } from './checks'\n\n// Setup a mutation observer to track DOM insertion\nexport const observer = new MutationObserver(mutations => {\n    mutations.forEach(({ addedNodes }) => {\n        for(let i = 0; i < addedNodes.length; i++) {\n            const node = addedNodes[i]\n            // For each added script tag\n            if(node.nodeType === 1 ){\n                const blockingType = isOnBlacklist(node)                 \n                if (node.tagName === 'SCRIPT') {\n                    const src = node.src\n                    const type = node.type\n                    // If the src is inside the blacklist and is not inside the whitelist\n\n                    if(blockingType) {\n                        // We backup a copy of the script node\n                        backupScripts.blacklisted.push([node.cloneNode(),node.parentElement])\n                        blockNodeNoBackup(node,blockingType)\n                        // Blocks inline script execution in Safari & Chrome\n                        node.type = TYPE_ATTRIBUTE\n\n                        // Firefox has this additional event which prevents scripts from beeing executed\n                        const beforeScriptExecuteListener = function (event) {\n                            // Prevent only marked scripts from executing\n                            if(node.getAttribute('type') === TYPE_ATTRIBUTE)\n                                event.preventDefault()\n                            node.removeEventListener('beforescriptexecute', beforeScriptExecuteListener)\n                        }\n                        node.addEventListener('beforescriptexecute', beforeScriptExecuteListener)\n                        \n                        node.parentElement.removeChild(node)\n                    }\n                }\n                else if (blockingType) {\n                    // Remove the node from the DOM\n                    blockNode(node,blockingType)\n                }\n                // if(node.nodeType === 1 && node.tagName === 'IFRAME' && TYPE_SANDBOX !== false) {\n                //     const src = node.src\n                //     // If the src is inside the blacklist and is not inside the whitelist\n                //     if(isOnBlacklist(src)) {\n                //         // We backup a copy of the script node\n                //         //backupIframes.blacklisted.push(node.cloneNode())\n\n                //         if (TYPE_SANDBOX === 'remove'){\n                //             // Remove the node from the DOM\n                //             node.parentElement.removeChild(node)\n                //         }else{\n                //             node.sandbox = TYPE_SANDBOX\n                //         }\n                //     }\n                // }  \n            }          \n        }\n    })\n})\n\n// Starts the monitoring\nobserver.observe(document.documentElement, {\n    childList: true,\n    subtree: true\n})","import { TYPE_ATTRIBUTE, blockNode, blockNodeNoBackup, patterns } from './variables'\nimport { isOnBlacklist } from './checks'\n\nconst originalDescriptors = {\n    src: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'src'),\n    type: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'type')\n}\nconst createElementBackup = document.createElement\n\n// Monkey patch the createElement method to prevent dynamic scripts from executing\ndocument.createElement = function(...args) {\n\n    const tag = args[0].toLowerCase() \n    const nodeElt = createElementBackup.bind(document)(...args)\n\n    if(tag === 'script'){\n        // Use the prototype descriptors\n            Object.defineProperties(nodeElt, {\n                'src': {\n                    get() {\n                        return originalDescriptors.src.get.call(this)\n                    },\n                    set(value) {\n                        if(isOnBlacklist({'src':value,'type':nodeElt.type})) {\n                            nodeElt.backup_type = nodeElt.type\n                            nodeElt.type = TYPE_ATTRIBUTE\n                        }\n                        return originalDescriptors.src.set.call(this, value)\n                    }\n                },\n                'type': {\n                    set(value) {\n                        const blockingType = isOnBlacklist(nodeElt)\n                        if (blockingType) nodeElt.backup_type = value\n                        return originalDescriptors.type.set.call(\n                            this,\n                            blockingType ?\n                                TYPE_ATTRIBUTE :\n                                value\n                        )\n                    }\n                }\n            })\n\n        // Monkey patch the setAttribute function so that the setter is called instead\n        nodeElt.setAttribute = function(name, value) {\n            if(name === 'type' || name === 'src')\n                nodeElt[name] = value\n            else\n                HTMLScriptElement.prototype.setAttribute.call(nodeElt, name, value)\n        }\n\n    }   \n\n    if (patterns.tags.some(element => (tag === element[0]))){\n        let props={ }\n        props[patterns.tags[tag]]={\n                get() {\n                    return originalDescriptors.src.get.call(this)\n                },\n                set(value) {\n                    if(isOnBlacklist(nodeElt)) {\n                        nodeElt.backup_type = nodeElt.type\n                        nodeElt.type = TYPE_ATTRIBUTE\n                    }\n                    return originalDescriptors.src.set.call(this, value)\n                }\n        }\n        Object.defineProperties(nodeElt, props)\n\n        // Monkey patch the setAttribute function so that the setter is called instead\n        nodeElt.setAttribute = function(name, value) {\n            if(name === tag)\n                nodeElt[name] = value\n            else\n                HTMLScriptElement.prototype.setAttribute.call(nodeElt, name, value)\n        }        \n    }\n    if (!blockNodeNoBackup(nodeElt)) nodeElt.style = 'display:none'\n\n    return nodeElt\n}","import {\n    patterns,\n    backupScripts,\n    TYPE_ATTRIBUTE,\n    patternsObj\n} from './variables'\n\nimport {\n    willBeUnblocked,\n    testPattern\n} from './checks'\n\nimport {\n    observer\n} from './observer'\n\nconst URL_REPLACER_REGEXP = new RegExp('[|\\\\{}()[\\\\]^$+*?.]', 'g')\n\nexport const unblockId = function(...scriptIds) {\n    scriptIds.forEach((e) => {\n        if (patternsObj.blacklist instanceof Object){\n            try{\n                unblock(patternsObj.blacklist[e]);\n            }catch(_){  /* do nothing*/     }\n        }\n        if (patternsObj.whitelist instanceof Object){\n            try{\n                unblock(patternsObj.whitelist[e]);\n            }catch(_){ /* do nothing*/  }\n        }        \n    });\n}\n\n// Unblocks all (or a selection of) blacklisted scripts.\nexport const unblock = function(...scriptUrls) {\n\n    if(scriptUrls.length < 1) {\n        patterns.blacklist = []\n        patterns.whitelist = []\n    } else {\n        if(patterns.blacklist instanceof Array) {\n            patterns.blacklist = patterns.blacklist.filter(pattern =>\n                scriptUrls.every(url => !testPattern(pattern,url))\n            )\n        }\n        if(patterns.whitelist instanceof Array) {\n            patterns.whitelist = [\n                ...patterns.whitelist,\n                ...scriptUrls\n                    .map(url => {\n                        const escapedUrl = url.replace(URL_REPLACER_REGEXP, '\\\\$&')\n                        const permissiveRegexp = '.*' + escapedUrl + '.*'\n                        if(!patterns.whitelist.find(p => p.toString() === permissiveRegexp.toString())) {\n                            return new RegExp(permissiveRegexp)\n                        }\n                        return null\n                    })\n                    .filter(Boolean)\n            ]\n        }\n    }\n\n    // Parse existing script tags with a marked type\n    const tags = document.querySelectorAll(`script[type=\"${TYPE_ATTRIBUTE}\"]`)\n    for(let i = 0; i < tags.length; i++) {\n        const script = tags[i]\n        if(willBeUnblocked(script)) {\n            script.type = 'application/javascript'\n            backupScripts.blacklisted.push([script,script.parentElement])\n            script.parentElement.removeChild(script)\n        }\n    }\n\n    // Exclude 'whitelisted' scripts from the blacklist and append them to <head>\n    let indexOffset = 0;\n    [...backupScripts.blacklisted].forEach((arr, index) => {\n        let script = arr[0]\n        let parent = arr[1]\n        if(willBeUnblocked(script)) {\n            if (script.type && script.type === TYPE_ATTRIBUTE)\n                script.type = 'application/javascript'\n            parent.appendChild(script)\n            backupScripts.blacklisted.splice(index - indexOffset, 1)\n            indexOffset++\n        }\n    })    \n\n    // Disconnect the observer if the blacklist is empty for performance reasons\n    if(patterns.blacklist && patterns.blacklist.length < 1) {\n        observer.disconnect()\n    }\n}"],"names":[],"mappings":"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"}